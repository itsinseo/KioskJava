변경사항 및 생각 정리용 텍스트 파일

...

-- 2023-05-30 AM 11:26
Main 메서드 내의 메서드 세분화: initialize(), order() 등 메서드 작성함.
필수 요구사항 1~6 구현함.
Order 클래스 작성: 상품(Product) 객체를 담을 좋은 방법이 딱히 생각나지 않아서 일단 ArrayList를 필드에 추가함.
추가 요구사항의 "동일한 상품 여러 개 담을 시 개수 표시"를 추후 구현하기 위해 Product 클래스에 int amount를 추가; 아직 구현 방법은 정확하게 생각해놓지 않음.
*Main 파일이 너무 길어지는데 메서드를 클래스 파일로 빼야 할지... Java스러운게 뭔지 고민중.

-- 2023-05-30 AM 11:54
Main 파일 줄이기 위해 Methods.java 파일 생성: static 메서드들 담아보려고 함.

-- 2023-05-30 PM 2:46
Methods.java -> Display.java 로 변경

-- 2023-05-31 PM 12:25
화면에 표시하는 것이 주 기능이기 때문에 모든 메서드 Main.java->Display.java로 이동.
메서드에서 메서드를 호출하는 방식이 왠지 싫어서... Display.java의 메서드들은 return type을 int로 주고, main 메서드에서 분기로 각 메서드를 호출할 수 있도록 작성함.
단점: main 메서드가 길어짐. 반환값 받아야함. 메서드 인수도 늘어남.

Order에 데이터를 추가하는 것은 표시가 아니라 데이터 변경이기 때문에 해당 메서드를 분리하기 위해 Cart.java 클래스 생성. 아직 분리는 하지 않음.
아직 분리 하지 않은 이유: 메서드->메서드 호출 방식을 최소화하고 싶은데, Order에 데이터를 추가하는 메서드를 별도의 메서드로 나눌 경우 메서드->메서드 호출의 꼴이 되기 때문에 고민중.

추가 요구사항의 상품별 개수는 Map, List 중 무엇을 사용해서 구현할지 고민중, 일단 int amount는 Product.java에 놔둔 상태.

-- 2023-05-31 PM 8:33
필드 private, getter setter 작성 필요

-- 2023-06-01 PM 4:40
Main static variables moved to main method
Display.order() is now connected to Display.orderComplete()
instance members are now private; added getter and setter for Menu, Product, Order classes
waitNum moved from Main(static var) to Order(int)
MainTest deleted
Menu.initialize() moved to new class MenuInit
고민 1: 객체들을 아예 Display.java로 다 옮기고 그 안에서 메서드간 호출을 이용할지(Main.java의 객체를 없애고 코드를 줄이기 위함)
고민 2: 귀찮긴 하지만 Order에 추가하는 메서드는 Cart.java로 옮길지
고민 3: 추가 요구사항(옵션 등) 구현 할지 말지

-- 2023-06-01 PM 6:17
Added Display.totalSales(), Display.totalList(), Order sales = new Order() at Main
**Main.java methods, objects need to be moved to another class(such as Display)**
추가 요구사항